{
    "collab_server" : "",
    "contents" : "library(dplyr)\nlibrary(ggplot2)\nrankings <- read.csv(\"ratings_raw.csv\", stringsAsFactors=F)\n\nrankings$year <- gsub(\"\\\\..*\", \"\", rankings$ep)\nrankings$year <- as.numeric(rankings$year) +1974\nrankings$avg_vote <- as.numeric(rankings$avg_vote)\n\nrankings_year <- rankings %>%\n  group_by(year) %>%\n  summarise(Avg=mean(avg_vote, na.rm=T))\n\nggplot(rankings_year, aes(x=year, y=Avg)) + geom_line(stat=\"identity\")\n\nrankings$votes <- as.numeric(rankings$votes)\nrankings$rating <- as.numeric(rankings$rating)\n\nrankings_year_cat <- rankings %>%\n  mutate(rawish=votes*rating) %>%\n  group_by(year, category) %>%\n  summarise(Avg=sum(rawish, na.rm=T)/sum(votes, na.rm=T)) \n\nrankings_year_cat$college_start <- 0\nrankings_year_cat$college_end <- 0\n\nrankings_year_cat$college_start <- ifelse(grepl(\"under\", rankings_year_cat$category), 2015, rankings_year_cat$college_start)\nrankings_year_cat$college_end <- ifelse(grepl(\"under\", rankings_year_cat$category), 2016, rankings_year_cat$college_end)\nrankings_year_cat$college_start <- ifelse(grepl(\"29\", rankings_year_cat$category), 2005, rankings_year_cat$college_start)\nrankings_year_cat$college_end <- ifelse(grepl(\"29\", rankings_year_cat$category), 2015, rankings_year_cat$college_end)\nrankings_year_cat$college_start <- ifelse(grepl(\"30\", rankings_year_cat$category), 1990, rankings_year_cat$college_start)\nrankings_year_cat$college_end <- ifelse(grepl(\"30\", rankings_year_cat$category), 2004, rankings_year_cat$college_end)\nrankings_year_cat$college_start <- ifelse(grepl(\"\\\\+\", rankings_year_cat$category), 1975, rankings_year_cat$college_start)\nrankings_year_cat$college_end <- ifelse(grepl(\"\\\\+\", rankings_year_cat$category), 1989, rankings_year_cat$college_end)\n\nrankings_year_cat_aged <- rankings_year_cat %>%\n#  filter(category==\"Aged 18-29\" | category==\"Aged 30-44\" | category==\"Aged 45+\" | category==\"Aged under 18\")\n   filter(category==\"Aged 18-29\" | category==\"Aged 30-44\" | category==\"Aged 45+\")\n  \ngg <- ggplot(rankings_year_cat_aged)\ngg <- gg + geom_rect(data=data.frame(category=\"Aged 18-29\"), aes(ymin = -Inf, ymax = Inf, \n                                                 xmin = 2005, xmax = 2015), alpha=0.5, fill = 'grey')\ngg <- gg + geom_rect(data=data.frame(category=\"Aged 30-44\"), aes(ymin = -Inf, ymax = Inf, \n                                                                 xmin = 1990, xmax = 2005), alpha=0.5, fill = 'grey')\ngg <- gg + geom_rect(data=data.frame(category=\"Aged 45+\"), aes(ymin = -Inf, ymax = Inf, \n                                                                 xmin = 1975, xmax = 1990), alpha=0.5, fill = 'grey')\n#gg <- gg + geom_rect(data=data.frame(category=\"Aged under 18\"), aes(ymin = -Inf, ymax = Inf, \n#                                                                 xmin = 2015, xmax = 2016), alpha=0.5, fill = 'grey')\ngg <- gg + geom_line(aes(year, Avg, group=category, color=category)) \ngg <- gg + facet_wrap(~category, ncol=3, scales = \"free_x\")\ngg <- gg + labs(x=NULL, y=\"Average IMDB user rating\", title=\"When Saturday Night Live was last funny\",\n                subtitle=\"It depends on when viewers were in college. Groups rated the \\\"best\\\" season in the timeframe they were college-aged.\",\n                caption=\"SOURCE: IMDB \\nAndrew Ba Tran/TrendCT.org\")\ngg <- gg + theme_bw(base_family=\"Lato Regular\")\ngg <- gg + theme(axis.ticks.y=element_blank())\ngg <- gg + theme(panel.border=element_blank())\ngg <- gg + theme(legend.key=element_blank())\ngg <- gg + theme(plot.title=element_text(face=\"bold\", family=\"Lato Regular\", size=22))\ngg <- gg + theme(plot.caption=element_text(face=\"bold\", family=\"Lato Regular\", size=9, color=\"gray28\", margin=margin(t=10, r=80)))\ngg <- gg + theme(legend.position=\"none\")\ngg <- gg + theme(strip.background=element_blank())\ngg <- gg + theme(strip.text.x = element_text(size = 8, colour = \"orange\"))\n\n\n\ngg\n",
    "created" : 1477782080413.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2528954380",
    "id" : "347CECE7",
    "lastKnownWriteTime" : 1477873434,
    "last_content_update" : 1477873434095,
    "path" : "~/Documents/Github/snl-project/snl_analysis.R",
    "project_path" : "snl_analysis.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}