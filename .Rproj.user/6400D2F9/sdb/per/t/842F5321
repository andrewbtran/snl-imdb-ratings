{
    "collab_server" : "",
    "contents" : "---\ntitle: \"SNL\"\nauthor: \"Andrew Ba Tran\"\ndate: \"October 30, 2016\"\noutput: html_document\n---\n\n\n```{r setup, warning=F, message=F}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(knitr)\n```\n\n```{r prepping_data}\nrankings <- read.csv(\"ratings_raw.csv\", stringsAsFactors=F)\nrankings$year <- gsub(\"\\\\..*\", \"\", rankings$ep)\nrankings$year <- as.numeric(rankings$year) +1974\nrankings$avg_vote <- as.numeric(rankings$avg_vote)\n\nrankings_year <- rankings %>%\n  group_by(year) %>%\n  summarise(Avg=mean(avg_vote, na.rm=T))\n```\n\n```{r chart_overall, fig.height=4, fig.width=8}\ngg <- ggplot(rankings_year, aes(x=year, y=Avg))\ngg <- gg + geom_line()\ngg <- gg + labs(x=NULL, y=\"Average IMDB user rating\", title=\"Average IMDB user ratings for SNL\",\n                subtitle=\"\",\n                caption=\"SOURCE: IMDB \\nAndrew Ba Tran/TrendCT.org\")\ngg <- gg + theme_bw(base_family=\"Lato Regular\")\ngg <- gg + theme(axis.ticks.y=element_blank())\ngg <- gg + theme(panel.border=element_blank())\ngg <- gg + theme(legend.key=element_blank())\ngg <- gg + theme(plot.title=element_text(face=\"bold\", family=\"Lato Regular\", size=22))\ngg <- gg + theme(plot.caption=element_text(face=\"bold\", family=\"Lato Regular\", size=9, color=\"gray28\", margin=margin(t=10, r=80)))\ngg <- gg + theme(legend.position=\"none\")\ngg <- gg + theme(strip.background=element_blank())\ngg\n```\n\nThe 2002 season was the worst and 2007 was the best, according to the average ratings.\n\n```{r more_calclulations}\n\nrankings$votes <- as.numeric(rankings$votes)\nrankings$rating <- as.numeric(rankings$rating)\n\nrankings_year_cat <- rankings %>%\n  mutate(rawish=votes*rating) %>%\n  group_by(year, category) %>%\n  summarise(Avg=sum(rawish, na.rm=T)/sum(votes, na.rm=T)) \n\nrankings_year_cat$college_start <- 0\nrankings_year_cat$college_end <- 0\n\nrankings_year_cat$college_start <- ifelse(grepl(\"under\", rankings_year_cat$category), 2015, rankings_year_cat$college_start)\nrankings_year_cat$college_end <- ifelse(grepl(\"under\", rankings_year_cat$category), 2016, rankings_year_cat$college_end)\nrankings_year_cat$college_start <- ifelse(grepl(\"29\", rankings_year_cat$category), 2005, rankings_year_cat$college_start)\nrankings_year_cat$college_end <- ifelse(grepl(\"29\", rankings_year_cat$category), 2015, rankings_year_cat$college_end)\nrankings_year_cat$college_start <- ifelse(grepl(\"30\", rankings_year_cat$category), 1990, rankings_year_cat$college_start)\nrankings_year_cat$college_end <- ifelse(grepl(\"30\", rankings_year_cat$category), 2004, rankings_year_cat$college_end)\nrankings_year_cat$college_start <- ifelse(grepl(\"\\\\+\", rankings_year_cat$category), 1975, rankings_year_cat$college_start)\nrankings_year_cat$college_end <- ifelse(grepl(\"\\\\+\", rankings_year_cat$category), 1989, rankings_year_cat$college_end)\n\nrankings_year_cat_aged <- rankings_year_cat %>%\n#  filter(category==\"Aged 18-29\" | category==\"Aged 30-44\" | category==\"Aged 45+\" | category==\"Aged under 18\")\n   filter(category==\"Aged 18-29\" | category==\"Aged 30-44\" | category==\"Aged 45+\")\n```\n\n```{r chart_years, fig.width=8, fig.height=4}\n\ngg <- ggplot(rankings_year_cat_aged)\ngg <- gg + geom_rect(data=data.frame(category=\"Aged 18-29\"), aes(ymin = -Inf, ymax = Inf, \n                                                 xmin = 2005, xmax = 2015), alpha=0.2, fill = 'grey')\ngg <- gg + geom_rect(data=data.frame(category=\"Aged 30-44\"), aes(ymin = -Inf, ymax = Inf, \n                                                                 xmin = 1990, xmax = 2005), alpha=0.2, fill = 'grey')\ngg <- gg + geom_rect(data=data.frame(category=\"Aged 45+\"), aes(ymin = -Inf, ymax = Inf, \n                                                                 xmin = 1975, xmax = 1990), alpha=0.2, fill = 'grey')\n#gg <- gg + geom_rect(data=data.frame(category=\"Aged under 18\"), aes(ymin = -Inf, ymax = Inf, \n#                                                                 xmin = 2015, xmax = 2016), alpha=0.5, fill = 'grey')\ngg <- gg + geom_line(aes(year, Avg, group=category, color=category)) \ngg <- gg + facet_wrap(~category, ncol=3, scales = \"free_x\")\ngg <- gg + labs(x=NULL, y=\"Average IMDB user rating\", title=\"When Saturday Night Live was last funny\",\n                subtitle=\"It depends on when viewers were in college. Groups rated the \\\"best\\\" season in the timeframe they were college-aged.\",\n                caption=\"SOURCE: IMDB \\nAndrew Ba Tran/TrendCT.org\")\ngg <- gg + theme_bw(base_family=\"Lato Regular\")\ngg <- gg + theme(axis.ticks.y=element_blank())\ngg <- gg + theme(panel.border=element_blank())\ngg <- gg + theme(legend.key=element_blank())\ngg <- gg + theme(plot.title=element_text(face=\"bold\", family=\"Lato Regular\", size=22))\ngg <- gg + theme(plot.caption=element_text(face=\"bold\", family=\"Lato Regular\", size=9, color=\"gray28\", margin=margin(t=10, r=80)))\ngg <- gg + theme(legend.position=\"none\")\ngg <- gg + theme(strip.background=element_blank())\ngg <- gg + theme(strip.text.x = element_text(size = 10, colour = \"grey5\"))\n\n\n\ngg\n\n\n```\n\n```{r men, fig.height=4, fig.width=8}\n\nrankings_year_cat_male <- rankings_year_cat %>%\n   filter(grepl(\"Male\", category)) %>%\n   filter(category!=\"Males under 18\")\n\n\ngg <- ggplot(rankings_year_cat_male)\ngg <- gg + geom_rect(data=data.frame(category=\"Males aged 18-29\"), aes(ymin = -Inf, ymax = Inf, \n                                                 xmin = 2005, xmax = 2015), alpha=0.2, fill = 'grey')\ngg <- gg + geom_rect(data=data.frame(category=\"Males aged 30-44\"), aes(ymin = -Inf, ymax = Inf, \n                                                                 xmin = 1990, xmax = 2005), alpha=0.2, fill = 'grey')\ngg <- gg + geom_rect(data=data.frame(category=\"Males aged 45+\"), aes(ymin = -Inf, ymax = Inf, \n                                                                 xmin = 1975, xmax = 1990), alpha=0.2, fill = 'grey')\ngg <- gg + geom_line(aes(year, Avg, group=category, color=category)) \ngg <- gg + facet_wrap(~category, ncol=2, scales = \"free_x\")\ngg <- gg + labs(x=NULL, y=\"Average IMDB user rating\", title=\"When Saturday Night Live was last funny for men\",\n                subtitle=\"It depends on when viewers were in college. Groups rated the \\\"best\\\" season in the timeframe they were college-aged.\",\n                caption=\"SOURCE: IMDB \\nAndrew Ba Tran/TrendCT.org\")\ngg <- gg + theme_bw(base_family=\"Lato Regular\")\ngg <- gg + theme(axis.ticks.y=element_blank())\ngg <- gg + theme(panel.border=element_blank())\ngg <- gg + theme(legend.key=element_blank())\ngg <- gg + theme(plot.title=element_text(face=\"bold\", family=\"Lato Regular\", size=22))\ngg <- gg + theme(plot.caption=element_text(face=\"bold\", family=\"Lato Regular\", size=9, color=\"gray28\", margin=margin(t=10, r=80)))\ngg <- gg + theme(legend.position=\"none\")\ngg <- gg + theme(strip.background=element_blank())\ngg <- gg + theme(strip.text.x = element_text(size = 10, colour = \"grey5\"))\n\n\n\ngg\n```\n\n```{r women, fig.height=4, fig.width=8}\n\nrankings_year_cat_female <- rankings_year_cat %>%\n   filter(grepl(\"Female\", category)) %>%\n   filter(category!=\"Females under 18\")\n\n\ngg <- ggplot(rankings_year_cat_female)\ngg <- gg + geom_rect(data=data.frame(category=\"Females aged 18-29\"), aes(ymin = -Inf, ymax = Inf, \n                                                 xmin = 2005, xmax = 2015), alpha=0.2, fill = 'grey')\ngg <- gg + geom_rect(data=data.frame(category=\"Females aged 30-44\"), aes(ymin = -Inf, ymax = Inf, \n                                                                 xmin = 1990, xmax = 2005), alpha=0.2, fill = 'grey')\ngg <- gg + geom_rect(data=data.frame(category=\"Females aged 45+\"), aes(ymin = -Inf, ymax = Inf, \n                                                                 xmin = 1975, xmax = 1990), alpha=0.2, fill = 'grey')\ngg <- gg + geom_line(aes(year, Avg, group=category, color=category)) \ngg <- gg + facet_wrap(~category, ncol=2, scales = \"free_x\")\ngg <- gg + labs(x=NULL, y=\"Average IMDB user rating\", title=\"When Saturday Night Live was last funny for women\",\n                subtitle=\"It depends on when viewers were in college. Groups rated the \\\"best\\\" season in the timeframe they were college-aged.\",\n                caption=\"SOURCE: IMDB \\nAndrew Ba Tran/TrendCT.org\")\ngg <- gg + theme_bw(base_family=\"Lato Regular\")\ngg <- gg + theme(axis.ticks.y=element_blank())\ngg <- gg + theme(panel.border=element_blank())\ngg <- gg + theme(legend.key=element_blank())\ngg <- gg + theme(plot.title=element_text(face=\"bold\", family=\"Lato Regular\", size=22))\ngg <- gg + theme(plot.caption=element_text(face=\"bold\", family=\"Lato Regular\", size=9, color=\"gray28\", margin=margin(t=10, r=80)))\ngg <- gg + theme(legend.position=\"none\")\ngg <- gg + theme(strip.background=element_blank())\ngg <- gg + theme(strip.text.x = element_text(size = 10, colour = \"grey5\"))\n\ngg\n```\nYoung women break the trend and tend to prefer the first few seasons of SNL.\n\n```{r top_seasons}\nrankings$season <- gsub(\"\\\\..*\", \"\", rankings$ep)\n\nrankings_year_season <- rankings %>%\n  mutate(rawish=votes*rating) %>%\n  group_by(year, season) %>%\n  summarise(average=sum(rawish, na.rm=T)/sum(votes, na.rm=T), votes=sum(votes, na.rm=T)) %>%\n  arrange(-average)\n\nkable(head(rankings_year_season))\n```\n\nSeason 17 in 1991 included the following cast: Dana Carvey, Chris Farley, Phil Hartman, Victoria Jackson, Mike Myers, Kevin Nealon, Chris Rock, Julia Sweeney, Tim Meadows, Adam Sandler, Rob Schneider, David Spade, Al Franken, Robert Smigel.\n\nSeason 33 in 2007 Fred Armisen, Will Forte, Bill Hader, Darrell Hammond, Seth Meyers, Amy Poehler, Maya Rudolph, Andy Samberg, Jason Sudeikis, Kenan Thompson, and Kristen Wiig. \n\n```{r group_favorites}\nrankings_year_season_groups <- rankings %>%\n  mutate(rawish=votes*rating) %>%\n  group_by(category, year, season) %>%\n  summarise(Avg=sum(rawish, na.rm=T)/sum(votes, na.rm=T), votes=sum(votes, na.rm=T)) %>%\n  filter(votes > 2) %>%\n  arrange(-Avg) %>%\n  group_by(category) %>%\n  filter(row_number()==1)\n\nkable(rankings_year_season_groups)\n```\n\n```{r top_hosts}\nrankings$host <- gsub(\"\\\\/.*\", \"\", rankings$guests)\n\nrankings_year_host <- rankings %>%\n  mutate(rawish=votes*rating) %>%\n  group_by(ep, host) %>%\n  summarise(average=sum(rawish, na.rm=T)/sum(votes, na.rm=T), votes=sum(votes, na.rm=T)) %>%\n  arrange(-average)\n\nkable(head(rankings_year_host, 10))\n```\n```{r top_multi_hosts}\n\nrankings_year_host_multi <- rankings %>%\n  mutate(rawish=votes*rating) %>%\n  group_by(host) %>%\n  summarise(average=sum(rawish, na.rm=T)/sum(votes, na.rm=T), votes=sum(votes, na.rm=T), shows=length(unique(ep))) %>%\n  filter(shows>=5) %>%\n  arrange(-average)\n\nkable(head(rankings_year_host_multi, 10))\n```\n\n```{r guest_host_favorites}\nrankings_year_season_groups_host <- rankings %>%\n  mutate(rawish=votes*rating) %>%\n  group_by(category, year, season, host) %>%\n  summarise(Avg=sum(rawish, na.rm=T)/sum(votes, na.rm=T), votes=sum(votes, na.rm=T)) %>%\n  filter(votes > 2) %>%\n  arrange(-Avg) %>%\n  group_by(category) %>%\n  filter(row_number()==1)\n\nkable(rankings_year_season_groups_host)\n```\n```{r worst_hosts}\nrankings_year_host <- rankings %>%\n  mutate(rawish=votes*rating) %>%\n  group_by(ep, host) %>%\n  summarise(average=sum(rawish, na.rm=T)/sum(votes, na.rm=T), votes=sum(votes, na.rm=T)) %>%\n  arrange(average)\n\nkable(head(rankings_year_host, 10))\n```\n```{r worst_multi_hosts}\n\nrankings_year_host_multi <- rankings %>%\n  mutate(rawish=votes*rating) %>%\n  group_by(host) %>%\n  summarise(average=sum(rawish, na.rm=T)/sum(votes, na.rm=T), votes=sum(votes, na.rm=T), shows=length(unique(ep))) %>%\n  filter(shows>=2) %>%\n  arrange(average)\n\nkable(head(rankings_year_host_multi, 10))\n```\n",
    "created" : 1477844604044.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3908994237",
    "id" : "842F5321",
    "lastKnownWriteTime" : 1477884610,
    "last_content_update" : 1477884610312,
    "path" : "~/Documents/Github/snl-project/index.Rmd",
    "project_path" : "index.Rmd",
    "properties" : {
        "last_setup_crc32" : "6FAD74257a163cba",
        "tempName" : "Untitled1"
    },
    "relative_order" : 13,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}