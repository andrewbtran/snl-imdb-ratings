{
    "collab_server" : "",
    "contents" : "\n# List of episodes rated\n# http://www.imdb.com/title/tt0072562/epdate\n\n\n# Ratings page\n# http://www.imdb.com/title/tt0694449/ratings\n\nlibrary(rvest)\nlibrary(dplyr)\nimdb_url <- \"http://www.imdb.com/title/tt0072562/epdate\"\n\niu <- imdb_url %>%\n  read_html() %>%\n  html_nodes(xpath=\"//table\") %>%\n  html_table()\n\niu <- iu[[1]]\n\nsubstrRight <- function(x, n){\n  substr(x, nchar(x)-n+1, nchar(x))\n}\n\ncolnames(iu) <- c(\"ep\", \"guests\", \"user_rating\", \"user_votes\", \"average_rating\")\niu$average_rating2 <- substrRight(iu$average_rating, 10)\niu$average_rating2 <- gsub(\"/.*\", \"\", iu$average_rating2)\n\niu_urls <- imdb_url %>% \n  read_html() %>%\n  html_nodes(xpath=\"//td//a\") %>%\n  html_attr(\"href\") %>%\n  data.frame() %>%\n  filter(!grepl(\"vote\", .)) %>%\n  filter(!grepl(\"amazon\", .)) %>%\n  filter(!grepl(\"dpreview\", .)) %>%\n  filter(!grepl(\"audible\", .))\n\ncolnames(iu_urls) <- \"link\"\n\niu <- cbind(iu, iu_urls)\niu$ratings_link <- paste0(\"http://www.imdb.com\", iu$link, \"ratings\")\n\n#####\n\n# //a+//table//a  \n\nrating_url <- \"http://www.imdb.com/title/tt0694432/ratings\"\n\n# Ratings\n\nfor (i in 1:nrow(iu)) {\n\n  rating_url <- iu$ratings_link[i]\n  \niu_ratings <- rating_url %>%\n  read_html() %>%\n  html_nodes(xpath=\"//table\") %>%\n  html_table(fill=T)\n\niu_ratings <- iu_ratings[[2]]\ncolnames(iu_ratings) <- c(\"type\", \"votes\", \"average\")\niu_ratings <- filter(iu_ratings, type !=\"\") %>%\n  filter(!is.na(votes))\n\niu_ratings$ep <- iu$ep[i]\niu_ratings$guests <- iu$guests[i]\niu_ratings$user_rating <- iu$user_rating[i]\niu_ratings$user_votes <- iu$user_votes[i]\niu_ratings$avg_vote <- iu$average_rating2[i]\n\nif (i == 1) {\n  iu_all_ratings <- iu_ratings\n} else {\n  iu_all_ratings <- rbind(iu_all_ratings, iu_ratings)\n}\n\nSys.sleep(3)\t\nprint(iu$ep[i])\n}\n\n### specifics now\n\nspecific_list <- c(\"/ratings-male\", \"/ratings-female\", \"/ratings-age_1\", \"/ratings-male_age_1\",\n                   \"/ratings-female_age_1\", \"/ratings-age_2\", \"/ratings-male_age_2\", \"/ratings-female_age_2\",\n                   \"/ratings-age_3\", \"/ratings-male_age_3\", \"/ratings-female_age_3\", \"/ratings-age_4\", \n                    \"/ratings-male_age_4\", \"/ratings-female_age_4\")\n\nspecific_list_name <- c(\"Males\", \"Females\", \"Aged under 18\", \"Males under 18\", \"Females under 18\",\n                        \"Aged 18-29\", \"Males aged 18-29\", \"Females aged 18-29\",\n                        \"Aged 30-44\", \"Males aged 30-44\", \"Females aged 30-44\",\n                        \"Aged 45+\", \"Males aged 45+\", \"Females aged 45+\")\nspecifics <- data.frame(specific_list, specific_list_name)\n\ntest_url <- \"http://www.imdb.com/title/tt0694432/ratings-male\"\n\n\nfor (i in 1:nrow(iu)) {\n  \n    for (x in 1:nrow(specifics)) {\n      url1 <- gsub(\"/ratings\", \"\", iu$ratings_link[i])\n      rating_url <- paste0(url1, specifics$specific_list[x])\n      \n      iu_ratings_spec <- rating_url %>%\n        read_html() %>%\n        html_nodes(xpath=\"//table\") %>%\n        html_table(fill=T)\n      iu_ratings_spec <- iu_ratings_spec[[1]]\n      iu_ratings_spec <- iu_ratings_spec[2:nrow(iu_ratings_spec),]\n      colnames(iu_ratings_spec) <- c(\"votes\", \"percent\", \"rating\")\n      \n      iu_ratings_spec$category <- specifics$specific_list_name[x]\n      iu_ratings_spec$ep <- iu$ep[i]\n      iu_ratings_spec$guests <- iu$guests[i]\n      iu_ratings_spec$user_rating <- iu$user_rating[i]\n      iu_ratings_spec$user_votes <- iu$user_votes[i]\n      iu_ratings_spec$avg_vote <- iu$average_rating2[i]\n      \n      if (x == 1) {\n        iu_all_ratings_spec <- iu_ratings_spec\n      } else {\n        iu_all_ratings_spec <- rbind(iu_all_ratings_spec, iu_ratings_spec)\n      }\n    }\n  \n  \n  if (i == 1) {\n    iu_all_ratings_spec_mega <- iu_all_ratings_spec\n  } else {\n    iu_all_ratings_spec_mega <- rbind(iu_all_ratings_spec_mega, iu_all_ratings_spec)\n  }\n  \n  Sys.sleep(3)\t\n  print(iu$ep[i])\n  \n}\n\n\n##\n\n\n\nfor (i in 145:nrow(iu)) {\n  \n  for (x in 1:nrow(specifics)) {\n    url1 <- gsub(\"/ratings\", \"\", iu$ratings_link[i])\n    rating_url <- paste0(url1, specifics$specific_list[x])\n    \n    iu_ratings_spec <- rating_url %>%\n      read_html() %>%\n      html_nodes(xpath=\"//table\") %>%\n      html_table(fill=T)\n    iu_ratings_spec <- iu_ratings_spec[[1]]\n    iu_ratings_spec <- iu_ratings_spec[2:nrow(iu_ratings_spec),]\n    colnames(iu_ratings_spec) <- c(\"votes\", \"percent\", \"rating\")\n    \n    iu_ratings_spec$category <- specifics$specific_list_name[x]\n    iu_ratings_spec$ep <- iu$ep[i]\n    iu_ratings_spec$guests <- iu$guests[i]\n    iu_ratings_spec$user_rating <- iu$user_rating[i]\n    iu_ratings_spec$user_votes <- iu$user_votes[i]\n    iu_ratings_spec$avg_vote <- iu$average_rating2[i]\n    \n    if (x == 1) {\n      iu_all_ratings_spec <- iu_ratings_spec\n    } else {\n      iu_all_ratings_spec <- rbind(iu_all_ratings_spec, iu_ratings_spec)\n    }\n  }\n  \n  \n  if (i == 1) {\n    iu_all_ratings_spec_mega <- iu_all_ratings_spec\n  } else {\n    iu_all_ratings_spec_mega <- rbind(iu_all_ratings_spec_mega, iu_all_ratings_spec)\n  }\n  \n  Sys.sleep(3)\t\n  print(iu$ep[i])\n  \n}\n\n\n",
    "created" : 1477762127640.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1207838894",
    "id" : "EB532E57",
    "lastKnownWriteTime" : 1477782085,
    "last_content_update" : 1477782085285,
    "path" : "~/Documents/Github/snl-project/imdb_scraper.R",
    "project_path" : "imdb_scraper.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}